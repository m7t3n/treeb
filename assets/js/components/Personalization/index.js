import React, { Component } from 'react'
import { connect } from 'react-redux'

import ReactCSSTransitionGroup from 'react-addons-css-transition-group'
import numeral from 'numeral'

import * as LearningActions from 'actions/Learning'

const FirstChild = props => {
    const children = React.Children.toArray(props.children)
    return children[0] || null
}

const combine = arr => {

    if (arr.length === 0) return ''
    if (arr.length === 1) return arr[0]
    if (arr.length === 2) return arr.join(' & ')

    const dupe = [...arr]
    const last = dupe.pop()

    return dupe.join(', ') + ' & ' + last
    
}

@connect(state => ({ learning: state.Learning, topics: state.Topics, }))
class Learning extends Component {

    state = {
        learning: true,
    }

    componentDidMount() {
        this.props.dispatch(
            LearningActions.load()
        )
    }

    componentWillReceiveProps(props) {
        if (this.props.learning != props.learning) {
            this.setState({
                learning: !props.learning.length,
            })
        }
    }

    render() {

        if (!this.state.learning) {
            return (
                <p>
                    <em>Looks like you're interested in {combine(this.props.learning)}.</em>
                </p>
            )
        }

        return (
            <div className="row">
                <div className="col-lg-2 col-md-2 col-sm-2 col-xs-2">
                    <svg width="31px" height="31px" viewBox="1 32 31 31">
                        <g id="noun_174032_cc" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd" transform="translate(1.000000, 32.000000)">
                            <g id="Group">
                                <path id="circle" d="M1.61309006,20.1567484 C1.53456472,20.1959639 1.45603938,20.1959639 1.37751404,20.1959639 C1.06341268,20.1959639 0.788573999,19.9998866 0.670785991,19.6861629 C0.552997983,19.2940082 0.74931133,18.8626381 1.14193802,18.7449917 C1.53456472,18.6273453 1.96645408,18.8234227 2.08424209,19.2155773 L2.08424209,19.2155773 C2.2020301,19.6077319 2.00571675,19.9998866 1.61309006,20.1567484 L1.61309006,20.1567484 Z M2.2020301,21.5292897 C1.84866607,21.725367 1.73087806,22.1959526 1.92719141,22.5488917 C2.04497942,22.7841845 2.3198181,22.9018309 2.55539412,22.9018309 C2.67318213,22.9018309 2.79097014,22.8626154 2.90875814,22.7841845 C3.26212217,22.5881072 3.37991018,22.1175216 3.18359683,21.7645825 C3.02654615,21.4508587 2.55539412,21.2939969 2.2020301,21.5292897 L2.2020301,21.5292897 Z M4.32221424,6.19604329 C4.51852759,6.19604329 4.71484093,6.11761236 4.87189161,5.96075051 C5.1467303,5.6470268 5.10746763,5.17644123 4.83262894,4.90193298 C4.51852759,4.62742474 4.04737556,4.6666402 3.77253687,4.94114845 C3.49769818,5.25487216 3.53696085,5.72545773 3.81179954,5.99996597 C3.96885022,6.15682783 4.16516356,6.19604329 4.32221424,6.19604329 L4.32221424,6.19604329 Z M0.827836668,17.2548041 C1.22046336,17.2155886 1.53456472,16.8626495 1.49530205,16.4312794 C1.45603938,16.0391247 1.10267535,15.725401 0.670785991,15.7646165 C0.278159297,15.8038319 -0.0359420575,16.1567711 0.00332061183,16.5881412 C0.0425832812,16.9802959 0.356684636,17.2548041 0.74931133,17.2548041 L0.827836668,17.2548041 L0.827836668,17.2548041 Z M0.670785991,14.2744289 L0.74931133,14.2744289 C1.14193802,14.2744289 1.45603938,13.9999206 1.49530205,13.607766 C1.53456472,13.2156113 1.25972603,12.8234567 0.827836668,12.7842412 C0.435209975,12.7450258 0.0425832812,13.019534 0.00332061183,13.4509041 L0.00332061183,13.4509041 C-0.0359420575,13.8822742 0.278159297,14.2352134 0.670785991,14.2744289 L0.670785991,14.2744289 Z M11.9784348,1.80391134 L12.1354854,1.80391134 C12.5281121,1.72548041 12.8029508,1.33332577 12.7244255,0.941171133 C12.6459001,0.549016494 12.2532735,0.274508247 11.8606468,0.352939175 C11.4680201,0.431370103 11.1931814,0.823524741 11.2717067,1.21567938 C11.3109694,1.56861855 11.6250707,1.80391134 11.9784348,1.80391134 L11.9784348,1.80391134 Z M2.2020301,8.50975566 C2.3198181,8.58818659 2.43760611,8.62740205 2.55539412,8.62740205 C2.83023281,8.62740205 3.06580882,8.50975566 3.18359683,8.27446288 C3.37991018,7.9215237 3.26212217,7.45093814 2.90875814,7.25486082 C2.55539412,7.0587835 2.08424209,7.17642989 1.88792874,7.52936906 L1.88792874,7.52936906 C1.73087806,7.88230824 1.84866607,8.31367834 2.2020301,8.50975566 L2.2020301,8.50975566 Z M3.85106221,24.0390794 C3.53696085,24.3135876 3.53696085,24.7841732 3.81179954,25.0978969 C3.96885022,25.2547587 4.16516356,25.3331897 4.36147691,25.3331897 C4.51852759,25.3331897 4.71484093,25.2547587 4.87189161,25.1371123 C5.18599297,24.8626041 5.18599297,24.3920185 4.91115428,24.0782948 C4.6363156,23.7645711 4.16516356,23.7645711 3.85106221,24.0390794 L3.85106221,24.0390794 Z M1.14193802,11.3332691 C1.22046336,11.3724845 1.2989887,11.3724845 1.37751404,11.3724845 C1.69161539,11.3724845 1.96645408,11.1764072 2.08424209,10.8626835 C2.2020301,10.4705289 2.00571675,10.0391588 1.61309006,9.92151236 C1.22046336,9.80386597 0.788573999,9.99994329 0.670785991,10.3920979 C0.513735313,10.7842526 0.74931133,11.1764072 1.14193802,11.3332691 L1.14193802,11.3332691 Z M12.1354854,28.2743495 C11.7428587,28.1959185 11.3502321,28.4312113 11.2717067,28.8625814 C11.1931814,29.2547361 11.4287574,29.6468907 11.8606468,29.7253216 L12.0176974,29.7253216 C12.3710615,29.7253216 12.6851628,29.4900288 12.7244255,29.1370897 C12.8029508,28.744935 12.5281121,28.3527804 12.1354854,28.2743495 L12.1354854,28.2743495 Z M9.46562393,27.3723938 C9.07299723,27.2155319 8.64110787,27.3723938 8.48405719,27.7645484 C8.32700652,28.1174876 8.48405719,28.5880732 8.87668389,28.744935 C8.99447189,28.7841505 9.07299723,28.8233659 9.19078524,28.8233659 C9.46562393,28.8233659 9.74046261,28.6665041 9.85825062,28.3919958 C9.97603863,27.9998412 9.81898795,27.5684711 9.46562393,27.3723938 L9.46562393,27.3723938 Z M9.15152257,2.70586701 C9.26931058,2.70586701 9.34783592,2.66665154 9.46562393,2.62743608 C9.85825062,2.47057422 10.0153013,2.03920412 9.85825062,1.64704948 C9.70119994,1.25489484 9.26931058,1.09803299 8.87668389,1.25489484 C8.48405719,1.4117567 8.32700652,1.8431268 8.48405719,2.23528144 C8.6018452,2.54900515 8.83742122,2.70586701 9.15152257,2.70586701 L9.15152257,2.70586701 Z M6.99207576,25.9606371 C6.6779744,25.7253443 6.20682237,25.8037752 5.97124635,26.1174989 C5.73567034,26.4312227 5.81419568,26.9018082 6.12829703,27.137101 C6.24608504,27.2155319 6.40313572,27.2939629 6.56018639,27.2939629 C6.79576241,27.2939629 7.03133843,27.1763165 7.14912643,26.9802391 C7.42396512,26.6665154 7.34543978,26.1959299 6.99207576,25.9606371 L6.99207576,25.9606371 Z M6.56018639,4.2352701 C6.71723707,4.2352701 6.87428775,4.19605463 6.99207576,4.07840824 C7.30617711,3.84311546 7.38470245,3.37252989 7.14912643,3.05880618 C6.91355042,2.74508247 6.44239839,2.66665154 6.12829703,2.90194433 C5.81419568,3.13723711 5.73567034,3.60782268 5.97124635,3.92154639 C6.08903436,4.11762371 6.32461038,4.2352701 6.56018639,4.2352701 L6.56018639,4.2352701 Z M30,15.0195227 C30,6.74505979 23.2468209,0 14.9623976,0 C14.805347,0 14.687559,0.0392154639 14.5697709,0.117646392 C14.5697709,0.117646392 14.5697709,0.117646392 14.5305083,0.117646392 C14.3341949,0.235292783 14.2164069,0.470585566 14.2164069,0.745093814 C14.2164069,1.13724845 14.5305083,1.49018763 14.9623976,1.49018763 C22.4223048,1.49018763 28.5080186,7.56858453 28.5080186,15.0195227 C28.5080186,22.4704608 22.4223048,28.5488577 14.9623976,28.5488577 C14.5697709,28.5488577 14.2164069,28.8625814 14.2164069,29.2939515 C14.2164069,29.4900288 14.2949323,29.6468907 14.4127203,29.7645371 L14.4519829,29.8037525 C14.4912456,29.842968 14.5697709,29.8821835 14.6482963,29.9213989 C14.6482963,29.9213989 14.687559,29.9213989 14.687559,29.9606144 C14.7268216,29.9606144 14.7660843,29.9606144 14.7660843,29.9998299 L14.805347,29.9998299 L14.9623976,29.9998299 L14.9623976,29.9998299 C23.2468209,30.0390453 30,23.2939855 30,15.0195227 L30,15.0195227 Z" fill="#16C98D"></path>
                                <g transform="translate(8.000000, 13.000000)" id="dots" fill="#99A9B3">
                                    <path d="M13.8409925,2.03904533 C13.8409925,1.25473605 13.2635536,0.5488577 12.4695752,0.5488577 C11.7477766,0.5488577 11.0981579,1.17630512 11.0981579,2.03904533 C11.0981579,2.82335461 11.6755968,3.52923295 12.4695752,3.52923295 C13.2635536,3.52923295 13.8409925,2.82335461 13.8409925,2.03904533 L13.8409925,2.03904533 Z" id="Path"></path>
                                    <path d="M2.94183408,2.03904533 C2.94183408,1.25473605 2.36439523,0.5488577 1.5704168,0.5488577 C0.848618233,0.5488577 0.198999522,1.17630512 0.198999522,2.03904533 C0.198999522,2.82335461 0.776438376,3.52923295 1.5704168,3.52923295 C2.36439523,3.52923295 2.94183408,2.82335461 2.94183408,2.03904533 L2.94183408,2.03904533 Z" id="Path"></path>
                                    <path d="M8.4275032,2.03904533 C8.4275032,1.25473605 7.85006434,0.5488577 7.05608592,0.5488577 C6.33428735,0.5488577 5.68466864,1.17630512 5.68466864,2.03904533 C5.68466864,2.82335461 6.26210749,3.52923295 7.05608592,3.52923295 C7.77788449,3.52923295 8.4275032,2.82335461 8.4275032,2.03904533 L8.4275032,2.03904533 Z" id="Path"></path>
                                </g>
                            </g>
                        </g>
                    </svg>
                </div>
                <div className="col-lg-10 col-md-10 col-sm-10 col-xs-10">
                    <p>
                        <em>Still learning... Keep engaging</em>
                    </p>
                    <p>Click an article below</p>
                </div>
            </div>
        )
    }
}

@connect(state => ({ topics: state.Topics, stats: state.Stats, }))
class Personalization extends Component {

    static defaultProps = {
        onRequestClose: () => {},
        open: true,
    }

    componentDidMount() {
        $('span[data-toggle="tooltip"]').tooltip()
    }

    renderInner = () => {

        if (!this.props.open) return null

        return (

            <div className="row personalization">
                <div className="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div className="exit" onClick={this.props.onRequestClose}>
                        <svg width="9px" height="9px" viewBox="1191 0 9 9">
                            <path d="M1196.45,4.03525 L1198.925,1.56025 C1199.121,1.36525 1199.121,1.04825 1198.925,0.85325 L1198.218,0.14625 C1198.023,-0.04875 1197.706,-0.04875 1197.511,0.14625 L1195.036,2.62125 L1192.561,0.14625 C1192.366,-0.04875 1192.049,-0.04875 1191.854,0.14625 L1191.147,0.85325 C1190.951,1.04825 1190.951,1.36525 1191.147,1.56025 L1193.622,4.03525 L1191.147,6.51025 C1190.951,6.70525 1190.951,7.02225 1191.147,7.21725 L1191.854,7.92425 C1192.049,8.11925 1192.366,8.11925 1192.561,7.92425 L1195.036,5.44925 L1197.511,7.92425 C1197.706,8.11925 1198.023,8.11925 1198.218,7.92425 L1198.925,7.21725 C1199.121,7.02125 1199.121,6.70525 1198.925,6.51025 L1196.45,4.03525 Z" id="X_1" stroke="none" fillOpacity="0.599999964" fill="#99A9B3" fillRule="evenodd"></path>
                        </svg>
                    </div>
                    <div className="row">
                        <div className="col-lg-4 col-md-4 col-sm-4 col-xs-4 following">
                            <h4>Following&nbsp;
                                <a href="https://getstream.io/personalization/" target="_blank">
                                    <span data-toggle="tooltip" data-placement="bottom" title="Follow relationships are the core of any basic feed. By establishing topics you like, we start off providing a more personalized experience faster and more accurately.">?</span>
                                </a>
                            </h4>
                            <p>
                                <em>
                                    {combine(this.props.topics.filter(topic => topic.followed == true ).map(topic => {
                                        return topic.name
                                    }))}
                                </em>
                            </p>
                        </div>
                        <div className="col-lg-4 col-md-4 col-sm-4 col-xs-4 engagement">
                            <h4>Engagement&nbsp;
                                <a href="https://getstream.io/personalization/" target="_blank">
                                    <span data-toggle="tooltip" data-placement="bottom" title="By leveraging feed specific analytics, we are track events that help us surface new content that will resonate with your interests.">?</span>
                                </a>
                            </h4>
                            <p><strong>{numeral(this.props.stats.impression).format('0,0')}</strong> Impressions</p>
                            <p><strong>{numeral(((typeof this.props.stats.click == 'undefined') ? 0 : this.props.stats.click)  + ((typeof this.props.stats.siteClick == 'undefined') ? 0 : this.props.stats.siteClick)).format('0,0')}</strong> Clicks</p>
                        </div>
                        <div className="col-lg-4 col-md-4 col-sm-4 col-xs-4 learn">
                            <h4>Learn&nbsp;
                                <a href="https://getstream.io/personalization/" target="_blank">
                                    <span data-toggle="tooltip" data-placement="bottom" title="We apply machine learning to learn what you're interested in and optimize your feed.">?</span>
                                </a>
                            </h4>
                            <Learning />
                        </div>
                    </div>
                </div>
            </div>

        )
    }

    render() {
        return (
            <ReactCSSTransitionGroup
                transitionName="personalization"
                component={FirstChild}
                transitionEnterTimeout={300}
                transitionLeaveTimeout={300}>
                {this.renderInner()}
            </ReactCSSTransitionGroup>
        )
    }
}

require('./styles.scss')

export default Personalization
